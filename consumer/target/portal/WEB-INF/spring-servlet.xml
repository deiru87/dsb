<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing
        infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven />
    <context:component-scan base-package="co.com.deiru" />

    <context:property-placeholder location="/WEB-INF/application.properties"/>

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources
        in the /WEB-INF/views directory -->
    <beans:bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>

    <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" >
        <beans:property name="driverClassName" value="${jdbc.driverClassName}" />
        <beans:property name="url" value="${jdbc.url}" />
        <beans:property name="username" value="${jdbc.username}" />
        <beans:property name="password" value="${jdbc.password}" />
    </beans:bean>

    <beans:bean name="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
    <beans:bean name="jsonTemplate" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>

    <beans:bean id="restTemplate" class="org.springframework.web.client.RestTemplate">

    </beans:bean>

<!--
    <beans:bean id="kafkaMessageListenerContainer" class="org.springframework.kafka.listener.KafkaMessageListenerContainer">
        <beans:constructor-arg>
            <beans:bean class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
                <beans:constructor-arg>
                    <beans:map>
                        <beans:entry key="bootstrap.servers" value="${consumer.server}" />
                        <beans:entry key="key.serializer"
                                     value="org.apache.kafka.common.serialization.StringSerializer" />
                        <beans:entry key="value.serializer"
                                     value="org.apache.kafka.common.serialization.StringSerializer" />
                        <beans:entry key="group.id" value="${consumer.group.id}" />
                        <beans:entry key="auto.offset.reset" value="earliest" />
                    </beans:map>
                </beans:constructor-arg>
            </beans:bean>
        </beans:constructor-arg>
        <beans:constructor-arg>
            <beans:bean class="org.springframework.kafka.listener.config.ContainerProperties">
                <beans:constructor-arg name="topics" value="test" />
            </beans:bean>
        </beans:constructor-arg>
    </beans:bean> -->

</beans:beans>